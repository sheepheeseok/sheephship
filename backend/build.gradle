plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.3'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'com.github.node-gradle.node' version '3.3.0'
}

group = 'sheepship'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.4'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'//http서버 연결체크
    compileOnly 'org.projectlombok:lombok'

    implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.9.0'
    implementation 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.4'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation 'junit:junit:4.13.2'
}

tasks.named('test') {
    useJUnitPlatform()
}

//tasks.register('npmInstall') {
//    group = 'build'
//    description = 'Runs npm install'
//    doLast {
//        exec {
//            workingDir 'src/main/frontend'
//            commandLine 'npm', 'install'
//        }
//    }
//}
//
//tasks.register('npmBuild') {
//    group = 'build'
//    description = 'Runs npm run build'
//    doLast {
//        exec {
//            workingDir 'src/main/frontend'
//            commandLine 'npm', 'run', 'build'
//        }
//    }
//}
//
//// Node.js setup using node-gradle plugin
//node {
//    version = '20.11.1'
//    npmVersion = '10.2.4'
//    download = true
//    workDir = file("${buildDir}/nodejs")
//    npmWorkDir = file("${buildDir}/npm")
//}
//
//// Task for copying frontend build into the `public` folder
//task copyFrontendBuild(type: Copy) {
//    from 'src/main/frontend/build'
//    into 'build/classes/java/main/public'
//}
//
//build.dependsOn npmInstall, npmBuild, copyFrontendBuild
//
//// Spring Boot plugin configuration
//bootJar {
//    archiveFileName = 'react.jar'
//    dependsOn copyFrontendBuild
//}
