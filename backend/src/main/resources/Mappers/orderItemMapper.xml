<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="sheepback.mapper.OrderItemMapper">

    <insert id="saveOrderItem" parameterType="java.util.List">
        INSERT INTO order_items (order_id, item_id, order_price, quantity, item_detail_id)
        VALUES
        <foreach collection="list" item="item" separator=",">
            (#{item.orderId}, #{item.itemId}, #{item.orderPrice}, #{item.quantity}, #{item.itemDetailId})
        </foreach>
    </insert>
    <select id="getOrderItembyOrderId" resultType="sheepback.Dtos.SimpleOrderItemDto">
        SELECT
        item_id AS itemId,
        quantity,
        item_detail_id AS itemDetailId
        FROM order_items
        WHERE order_item_id IN
        <foreach collection="orderId" item="orderId" open="(" separator="," close=")">
            #{orderId}
        </foreach>
    </select>
    <select id="getOrderInquiryByOrderId" resultType="sheepback.Dtos.OrderInquiryItemDto">
        SELECT
            oi.order_item_id    AS orderItemId,
            oi.quantity         AS quantity,
            oi.item_detail_id   AS itemDetailId,
            oi.item_id          AS itemId,
            oi.order_price      AS orderPrice,
            i.name              AS name,
            id.main_url         AS mainUrl
        FROM
            order_items oi
                INNER JOIN item i ON oi.item_id = i.item_id
                INNER JOIN item_detail id ON oi.item_detail_id = id.item_detail_id
        WHERE
            oi.order_item_id = #{orderItemId}
    </select>



    <!-- 주문과 주문 상품 리스트 매핑 -->
    <resultMap id="OrderInquiryListMap" type="sheepback.Dtos.OrderInquiryListDto">
        <!-- 주문 기본 정보 -->
        <id property="orderId" column="order_id"/>
        <result property="orderDate" column="order_date"/>
        <result property="status" column="status"/>

        <!-- 주문 상품 목록 (컬렉션) -->
        <collection
                property="orderInquiryItemDtoList"
                ofType="sheepback.Dtos.OrderInquiryItemDto"
                resultMap="OrderInquiryItemMap"
        />
    </resultMap>

    <!-- 주문 상품 정보 매핑 -->
    <resultMap id="OrderInquiryItemMap" type="sheepback.Dtos.OrderInquiryItemDto">
        <id property="orderItemId" column="order_item_id"/>
        <result property="quantity" column="quantity"/>
        <result property="itemDetailId" column="item_detail_id"/>
        <result property="itemId" column="item_id"/>
        <result property="orderPrice" column="order_price"/>
        <result property="name" column="item_name"/>
        <result property="mainUrl" column="main_url"/>
    </resultMap>
    <select id="getOrderListWithItems" resultMap="OrderInquiryListMap">
        SELECT

            o.order_id,
            o.order_date,
            o.status,
            oi.order_item_id,
            oi.quantity,
            oi.item_detail_id,
            oi.item_id,
            oi.order_price,
            i.name AS item_name,
            i.main_url
        FROM
            orders o
                INNER JOIN order_items oi ON o.order_id = oi.order_id
                INNER JOIN item i ON oi.item_id = i.item_id
                INNER JOIN item_detail id ON oi.item_detail_id = id.item_detail_id
        WHERE
            o.member_id = #{memberId} and (o.status = 'CONFIRM' or o.status = 'ORDER') and o.order_date BETWEEN #{startDate} AND #{endDate}
    </select>

    <select id="getCancelOrderListWithItems" resultMap="OrderInquiryListMap">
        SELECT

            o.order_id,
            o.order_date,
            o.status,
            oi.order_item_id,
            oi.quantity,
            oi.item_detail_id,
            oi.item_id,
            oi.order_price,
            i.name AS item_name,
            i.main_url
        FROM
            orders o
                INNER JOIN order_items oi ON o.order_id = oi.order_id
                INNER JOIN item i ON oi.item_id = i.item_id
                INNER JOIN item_detail id ON oi.item_detail_id = id.item_detail_id
        WHERE
            o.member_id = #{memberId} and (o.status = 'CANCLE' or o.status = 'REFUND')
    </select>
    <select id="getOrderQuo" resultMap="OrderInquiryListMap">
        SELECT

            o.order_id,
            o.order_date,
            o.status,
            oi.order_item_id,
            oi.quantity,
            oi.item_detail_id,
            oi.item_id,
            oi.order_price,
            i.name AS item_name,
            i.main_url
        FROM
            orders o
                INNER JOIN order_items oi ON o.order_id = oi.order_id
                INNER JOIN item i ON oi.item_id = i.item_id
                INNER JOIN item_detail id ON oi.item_detail_id = id.item_detail_id
        WHERE
            o.member_id = #{memberId} and o.order_date BETWEEN #{startDate} AND #{endDate}
    </select>
    <select id="selectOrderStatusCounts" resultType="map">
        SELECT
            COUNT(CASE WHEN status = 'CONFIRMED' THEN 1 END) AS confirmedCount,
            COUNT(CASE WHEN status = 'PENDING' THEN 1 END) AS pendingCount,
            COUNT(CASE WHEN status = 'DELIVERED' THEN 1 END) AS deliveredCount,
            COUNT(CASE WHEN status = 'BEFORE_DEPOSIT' THEN 1 END) AS beforeDepositCount
        FROM orders
        where member_id = #{memberId} and order_date BETWEEN #{startDate} AND #{endDate}
    </select>
</mapper>