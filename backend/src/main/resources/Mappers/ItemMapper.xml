<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="sheepback.mapper.ItemMapper">

    <select id="getItemImgById" parameterType="long">
        select
            im.detail_url1, im.detail_url2, im.detail_url3, im.detail_url4, im.sub_url1, im.sub_url2, im.sub_url3
        from
            item_img im
        where
            im.item_id = #{id}
    </select>

    <select id="getItemDetail" parameterType="long">
        select
           id.item_detail_id, id.color, id.size, id.stock_quantity
        from item_detail id
        where id.item_id = #{id}

    </select>

    <select id="getItemById" parameterType="long">
        select
            i.item_id, i.name, i.produce, i.contents, i.main_url,
            i.created, i.delivery_fee, i.price, i.sales_volume
        from item i
        where i.item_id = #{id}

    </select>
    <select id="getItemListBySearchKeyword" parameterType="string">
        SELECT
            i.item_id, i.name, i.price, i.main_url
        FROM
            item i
        where
            i.name like CONCAT('%', #{keyword}, '%')

    </select>

    <select id="getBuyItemListById" resultType="sheepback.Dtos.ItemInfo">
        SELECT item_id, name as itemName, price, main_url, delivery_fee as deliveryFee
        FROM item
        WHERE item_id IN
        <foreach item="id" collection="list" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <select id="getItemListByCategory" parameterType="string">
        SELECT
            i.item_id as itemId, i.name, i.price, i.main_url
        FROM
            item i
        inner join
                item_category ic on i.item_id = ic.item_id
        inner join
                category c on ic.category_id = c.category_id
        where
            c.name = #{category}
        order by
            i.created
    </select>

    <insert id="insertItem" parameterType="sheepback.Dtos.ItemDto">


    </insert>
    


    <insert id="addCategory" parameterType="string">
        insert into
            category (name)
        values
            (#{category})
    </insert>
    <update id="updateCategory" parameterType="map">
        update category set name = #{newCategoryName} where category_id = #{categoryName}
    </update>
    <delete id="deleteCategory" parameterType="string">
        delete
        from category
        where name = #{category};
    </delete>
    <update id="cancelQuantity">
        update item_detail set stock_quantity = stock_quantity + #{quantity}
        where item_detail_id = #{itemDetailId}
    </update>

    <select id="getItemInfoForOrderDto" resultType="sheepback.Dtos.ItemInfoForOrderDto">
        SELECT
        i.item_id,
        i.price,
        i.name,
        id.item_detail_id
        FROM item i
        INNER JOIN item_detail id ON i.item_id = id.item_id
        WHERE
        i.item_id = #{id}
        AND id.color = #{color}
        AND
        <choose>
            <when test="size == null">
                id.size IS NULL
            </when>
            <otherwise>
                id.size = #{size}
            </otherwise>
        </choose>
    </select>

    <update id="changeQuantity">
        UPDATE item_detail
        SET stock_quantity = stock_quantity - #{quantity}
        WHERE item_id = #{id}
        AND color = #{color}
        <if test="size == null">
            AND size IS NULL
        </if>
        <if test="size != null">
            AND size = #{size}
        </if>
    </update>
</mapper>